class Solution:
    def minSetSize(self, arr: List[int]) -> int:
        l=len(arr)//2
        d={}
        c,y=0,0
        x=[]
        for s in arr:
            if s in d:
                d[s]+=1
            else:d[s]=1
        x=d.values()
        x=sorted((x))
        for i in range(len(x)):
            y+=x[(len(x)-1)-i]
            c+=1
            if y>=(l):
                break
        return c
        
        
        
        
'''Input: arr = [3,3,3,3,5,5,5,2,2,7]
Output: 2
Explanation: Choosing {3,7} will make the new array [5,5,5,2,2] which has size 5 (i.e equal to half of the size of the old array).
Possible sets of size 2 are {3,5},{3,2},{5,2}.
Choosing set {2,7} is not possible as it will make the new array [3,3,3,3,5,5,5] which has a size greater than half of the size of the old array.
'''
